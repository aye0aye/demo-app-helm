jobs:

# jobs for the sample node app pipeline from CI thru TEST environment

################################

# add pipeline job
# TEST deployment to Kube cluster on AWS
  - name: sample_helm_deploy_test
    type: runSh
    steps:
      - IN: kube_cluster_config
      - IN: int_aws_helm
      - IN: repo_sample_helm
        switch: off
      - IN: img_nginx_helm
      - IN: img_sample_helm
      - IN: params_sample_helm_test
      - TASK:
        - script: echo "starting deployment to ${ENVIRONMENT}"
        # retrieve Kube config from cluster
        - script: kops export kubecfg --name ${CLUSTER_NAME} --state ${KOPS_STATE_STORE}
        # install Helm CLI
        - script: |
            pushd $REPO_SAMPLE_HELM_STATE
            . pipeline/installHelm.sh
        # deploy to TEST namespace in Kube cluster
        # - script: . pipeline/deploy.sh
        - script: |
            ENVIRONMENT=$(echo "$ENVIRONMENT" | awk '{print tolower($0)}')
            shipctl replace chartSample/values.yaml 
            echo "deploying to ${CLUSTER_NAME} via Helm"
            helm upgrade --install sample-0.0.1 ./chartSample
            popd

# # add pipeline job
# # PROD deployment to Kube cluster on AWS
#   - name: sample_helm_deploy_prod
#     type: runSh
#     steps:
#       - IN: kube_cluster_config
#       - IN: sample_helm_deploy_test
#         switch: off
#       - IN: int_aws
#       - IN: int_kube
#       - IN: params_helm_prod
#       - IN: repo_sample_helm
#         switch: off
#       - IN: params_sample_helm_prod
#       - TASK:
#         - script: . $REPO_SAMPLE_HELM_STATE/pipeline/prepEnvironment.sh
#         - script: . $REPO_SAMPLE_HELM_STATE/pipeline/deploy.sh
